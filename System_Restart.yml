---
- name: Restart Palo Alto System
  hosts: localhost
  gather_facts: no
  collections:
  - paloaltonetworks.panos

  tasks:
    - name: get api key
      panos_api_key: 
        provider: 
            ip_address: "{{ ip_address }}"
            username: "{{ username }}"
            password: "{{ password }}"
      register: auth

    - name: Check HA state
      block:

        - name: high-availability state before failover
          panos_op:
            provider:
              ip_address: "{{ ip_address }}"
              api_key: "{{ auth.api_key }}"
            cmd: "show high-availability state"
          register: ha_report

        - set_fact:
            local_state: before_set_state
            local_state_alone: before_set_state

        - set_fact:
            local_state: "{{ ( ha_report.stdout | from_json | json_query('response'))['result']['group']['local-info']['state'] }}"
          register: local_state_fact
          ignore_errors: yes

        - set_fact:
            local_state_alone: 'HA not enabled'
          when: local_state_fact is not succeeded

        - debug:
            msg: 
              - "Local IP    : {{ ip_address }}"
              - "Local State : {{ local_state }}"
          when: local_state_fact is succeeded

        - debug:
            var: local_state_alone

        - debug:
            var: local_state

        - debug:
            msg: Check state is active?
          failed_when: "'active' in local_state or local_state_alone != 'HA not enabled'"

        - name: Get facts
          panos_facts:
            provider:
              ip_address: "{{ ip_address }}"
              api_key: "{{ auth.api_key }}"
            gather_subset: ['system']
          register: uptime_before_restart

        - debug:
            msg: "Uptime before restart: {{ uptime_before_restart.ansible_facts.ansible_net_uptime }}"

        - name: Restart System
          panos_restart:
            provider:
              ip_address: "{{ ip_address }}"
              api_key: "{{ auth.api_key }}"

        - name: wait for reboot
          panos_check:
            provider:
              ip_address: "{{ ip_address }}"
              api_key: "{{ auth.api_key }}"
            initial_delay: 60
            interval: 0
            timeout: 86400
          register: check

        - debug:
            var: check

        - name: Get facts
          panos_facts:
            provider:
              ip_address: "{{ ip_address }}"
              api_key: "{{ auth.api_key }}"
            gather_subset: ['system']
          register: uptime_after_restart

        - debug:
            msg: "Uptime after restart: {{ uptime_after_restart.ansible_facts.ansible_net_uptime }}"
      rescue:
        - debug:
            msg: "HA Status at {{ ip_address }} is Active. Please failover"
          when: 
          failed_when: true

