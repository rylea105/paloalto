---
- name: Generate Tech Support
  hosts: localhost
  gather_facts: no
  collections:
  - paloaltonetworks.panos

  tasks:
    - name: get api key
      panos_api_key:
        provider:
            ip_address: "{{ ip_address }}"
            username: "{{ username }}"
            password: "{{ password }}"
      register: auth

    - name: Create a job to retrieve technical support data
      uri:
        url: "https://{{ ip_address }}/api/?key={{ auth.api_key }}&type=export&category=tech-support"
        return_content: yes
        validate_certs: no
      register: job_id
    
    - set_fact:
        output: "{{  job_id.content.split().7}}"
 
    - set_fact:
        id: "{{ output.split('<').0 }}"

    # # Pause for 2 minutes to create tech-support
    # - pause:
    #     minutes: "{{ pause_time | default( 2 ) }}"

    - name: Check on the status of the job
      uri:
        url: "https://{{ ip_address }}/api/?key={{ auth.api_key }}&type=export&category=tech-support&action=status&job-id={{ id }}"
        return_content: yes
        validate_certs: no
      register: job_status
      retries: 720
      delay: 5
      until: job_status.content.split('</stoppable><result>').1.split('</result>').0 == "OK"

    - name: set date_time1
      set_fact:
        date_time1: "{{ job_status.content.split('<tenq>').1 }}"
 
    - name: set date_time2
      set_fact:
        date_time2: "{{ date_time1.split('</tenq>').0 }}"

    - name: set date_time_not_fillter
      set_fact:
        date_not_fillter: "{{ date_time2.split().0 }}"
        time_not_fillter: "{{ date_time2.split().1 }}"

    - name: set date_time
      set_fact:
        date: "{{ date_not_fillter.split('/') | join('') }}"
        time: "{{ time_not_fillter.split(':') | join('') }}"

    - name: set file_name
      set_fact:
        file_name: "{{ date }}_{{ time }}_techsupport.tgz"

    # - name: Retrieve the tech support data.
    #   shell: "curl --insecure 'https://{{ ip_address }}/api/?key={{ auth.api_key }}&type=export&category=tech-support&action=get&job-id={{ id }}' --output {{ file_path }}/1{{ file_name }}"
    #   delegate_to: localhost

    - name: Download foo.conf
      get_url:
        url: "https://{{ ip_address }}/api/?key={{ auth.api_key }}&type=export&category=tech-support&action=get&job-id={{ id }}"
        dest: "{{ file_path }}/2{{ file_name }}"
        validate_certs: no

    # - name: Copy a tech support data to file server
    #   copy:
    #     src: "{{ file_path }}/{{ file_name }}"
    #     dest: "{{ file_path }}/{{ file_name }}"
    #   delegate_to: file_server