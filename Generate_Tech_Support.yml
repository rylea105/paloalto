---
- name: Generate Tech Support
  hosts: localhost
  gather_facts: no
  collections:
  - paloaltonetworks.panos
  # roles:
  #   - api_key
  #   - generate_tech_support

  tasks:
    - name: get api key
      panos_api_key:
        provider:
            ip_address: "{{ ip_address }}"
            username: "{{ username }}"
            password: "{{ password }}"
      register: auth

    - name: Create a job to retrieve technical support data
      uri:
        url: "https://{{ ip_address }}/api/?key={{ auth.api_key }}&type=export&category=tech-support"
        return_content: yes
        validate_certs: no
      register: job_id

    # Pause for 2 minutes to create tech-support
    - pause:
        minutes: "{{ pause_time | default( 2 ) }}"

    - name: Check on the status of the job
      uri:
        url: "https://{{ ip_address }}/api/?key={{ auth.api_key }}&type=export&category=tech-support&action=status&job-id={{ job_id.job }}"
        return_content: yes
        validate_certs: no
      register: job_status

    - set_fact:
        date_not_fillter: "{{ job_status.tenq.split().0 }}"
        time_not_fillter: "{{ job_status.tenq.split().1 }}"

    - set_fact:
        date: "{{ date_not_fillter.split('/') | join('') }}"
        time: "{{ time_not_fillter.split(':') | join('') }}"

    - set_fact:
        file_name: "{{ date }}_{{ time }}_techsupport.tgz"

    - name: Retrieve the tech support data.
      shell: curl "https://{{ ip_address }}/api/?key={{ auth.api_key }}&type=export&category=tech-support&action=status&job-id={{ job_id.job }} -o -s {{ file_path }}/{{ file_name }}"
      delegate_to: localhost
      when: job_status.result is 'ok'

    # - name: Generate Tech Support File
    #   panos_op:
    #     provider:
    #       ip_address: "{{ ip_address }}"
    #       api_key: "{{ auth.api_key }}"
    #     cmd: <request><tech-support><dump></dump></tech-support></request>
    #     cmd_is_xml: yes
