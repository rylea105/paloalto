---
- name: Show Cluster Status
  hosts: localhost
  gather_facts: no
  collections:
    - paloaltonetworks.panos

  roles:
    # - api_key
  #   - high_availability_state
  #   - fail_over

  tasks:
    - name: get api key
      panos_api_key: 
        provider: 
            ip_address: "{{ ip_address }}"
            username: "{{ username }}"
            password: "{{ password }}"
      register: auth

    - name: high-availability state before failover
      panos_op:
        provider:
          ip_address: "{{ ip_address }}"
          api_key: "{{ auth.api_key }}"
        cmd: "show high-availability state"
      register: ha_report

    - set_fact:
        local_ip: "{{ ( ha_report.stdout | from_json | json_query('response'))['result']['group']['local-info']['mgmt-ip'] }}"
        local_state: "{{ ( ha_report.stdout | from_json | json_query('response'))['result']['group']['local-info']['state'] }}"
        peer_ip: "{{ ( ha_report.stdout | from_json | json_query('response'))['result']['group']['peer-info']['mgmt-ip'] }}"
        peer_state: "{{ ( ha_report.stdout | from_json | json_query('response'))['result']['group']['peer-info']['state'] }}"

    - debug:
        msg: 
         - "IP Local : {{ local_ip }} , State: {{ local_state }}"
         - "IP Peer  : {{ peer_ip }}  , State: {{ peer_state }}"

    # - name: Template a file to /root/paloalto/ha_report.csv
    #   template:
    #     src: roles/high_availability_state/templates/ha_report.csv.j2
    #     dest: /tmp/ha_report.csv

    # - name: Fail-over suspend
    #   panos_op:
    #     provider:
    #       ip_address: "{{ ip_address }}"
    #       api_key: "{{ auth.api_key }}"
    #     cmd: <request><high-availability><state><suspend></suspend></state></high-availability></request>
    #     cmd_is_xml: yes
    #   register: failover
    #   ignore_errors: yes

    # - name: Fail-over functional
    #   panos_op:
    #     provider:
    #       ip_address: "{{ ip_address }}"
    #       api_key: "{{ auth.api_key }}"
    #     cmd: <request><high-availability><state><functional></functional></state></high-availability></request>
    #     cmd_is_xml: yes
    #   register: failover
    #   ignore_errors: yes

    # - debug:
    #       var: failover
    #   ignore_errors: yes
      
    # - pause:
    #     minutes: 1

    - name: high-availability state after failover
      panos_op:
        provider:
          ip_address: "{{ ip_address }}"
          api_key: "{{ auth.api_key }}"
        cmd: "show high-availability state"
      register: ha_report

    - set_fact:
        local_ip: "{{ ( ha_report.stdout | from_json | json_query('response'))['result']['group']['local-info']['mgmt-ip'] }}"
        local_state: "{{ ( ha_report.stdout | from_json | json_query('response'))['result']['group']['local-info']['state'] }}"
        peer_ip: "{{ ( ha_report.stdout | from_json | json_query('response'))['result']['group']['peer-info']['mgmt-ip'] }}"
        peer_state: "{{ ( ha_report.stdout | from_json | json_query('response'))['result']['group']['peer-info']['state'] }}"

    - debug:
        msg: 
         - "IP Local : {{ local_ip }} , State: {{ local_state }}"
         - "IP Peer  : {{ peer_ip }}  , State: {{ peer_state }}"